ls()
file.edit("scrapeLoop.R")
scrapeLoop <- readLines("scrapeLoop.R")
scrapeLoop[1:6]
eval(scrapeLoop[1])
args(parse)
parse(text=scrapeLoop[1])
ls()
eval(parse(text=scrapeLoop[1]))
ls()
arguments
scrapeLoop[1]
head(scrapeLoop)
scrapeLoop[7:12]
arguments <- 1:100
DF <- scrape.chess.com(arguments[1])
eval(parse(scrapeLoop[3]))
invisible(lapply(list.files("R", "\\.R$", full.names=T), source))
getwd()
Files <- file.info(list.files("R", "\\.R$", full.names=T))
dim(Files)
colnames(Files)
unique(Files$isdir)
unique(Files$mode)
unique(Files$uid)
unique(Files$gid)
class(Files$gid)
Files <- Files[,c("size", 'mtime")]
Files <- Files[,c("size", 'mtime")]
]
Files <- Files[,c("size", "mtime")]
head(Files
)
Files <- Files[order(Files$mtime, descending=T),]
args(order)
Files <- Files[order(Files$mtime, decreasing=T),]
head(Files)
tail(Files)
date
date()
FROM <- Files[Files$mtime == Files[1,"mtime"]]
FROM <- Files[Files$mtime == Files[1,"mtime"],]
FROM
FROM <- Files["2017-10-22"<Files$mtime,]
FROM
file.remove("R/97722598.R")
FROM <- FROM[-nrow(FROM),]
FROM
dir.create("unsorted")
TO <- gsub("^R","unsorted",row.names(FROM))
TO
file.rename(row.names(FROM),TO)
rm(FROM,TO,Files)
ls()
scrapeLoop
eval(parse(scrapeLoop[3]))
invisible(lapply(list.files("R","\\.R$", full.names=T),source))
eval(parse(text-scrapeLoop[3]))
eval(parse(text=scrapeLoop[3]))
ls()
scrapeLoop
rm(list=ls())
scrapeLoop <- readLines("scrapeLoop.R")
eval(parse(text=scrapeLoop[3]))
ls()
arguments <- 1:100
DF <- scrape.chess.com(arguments[1])
DF
for(n in arguments[-1]){
DF <- rbind(DF, scrape.chess.com(n))
}
tail(DF)
args(scrape.chess.com)
test <- scrape.chess.com(11,"live")
test
test <- scrape.chess.com(11,"correspondence")
test
test <- scrape.chess.com(11,"open")
scrape.chess.com
type <- "open"
rm(type)
Link <- file.path('https://www.chess.com/games/view",11)
Link <- file.path('https://www.chess.com/games/view',11)
DF1 <- regeix.scrape(Link,"open")
DF1 <- regex.scrape(Link,"open")
DF1 <- cbind(DF1, ID=paste("0", 11, sep="_") stringsAsFactors=F)
DF1 <- cbind(DF1, ID=paste("0", 11, sep="_"), stringsAsFactors=F)
head(regex.scrape.com,15)
head(scrape.chess.com,15)
head(scrape.chess.com,30)
tail(scrape.chess.com, 20)
exists("weave.rbind")
DF2 <- data.frame(Link="NA", stringsAsFactors=F)
DF3 <- data.frame(Link="NA", stringsAsFactors=F)
DF <- weave.rbind(DF1,DF2)
DF1
DF2
colnames(DF1)
DF2 <- data.frame(ID=paste("c", 11, sep="_"), stringsAsFactors=F)
weave.rbind(DF1,DF2)
head(weave.rbind)
for(n in 1:ncolDF)){
for(n in 1:ncol(DF)){
if(!colnames(DF1)[n] %in% colnames(DF2)){
DF2[,colnames(DF1)[n]] <- ""
print(colnames(DF)[n]
}
for(n in 1:ncol(DF)){
if(!colnames(DF1)[n] %in% colnames(DF2)){
DF2[,colnames(DF1)[n]] <- ""
print(colnames(DF)[n])
}
}
colnames(DF1)
q()
ls()
source("R/scrap.chess.com.R")
list.files()
source("R/scrape.chess.com.R")
DF <- scrape.chess.com(11)
file.edit("R/scrape.chess.com.R")
file.edit("R/regex.scrape.R")
regex.scrape <- readLines("regex.scrape.R")
regex.scrape <- readLines("R/regex.scrape.R")
regex.scrape[1:6]
scrape.chess.com
Link <- "https://www.chess.com/games/view/11"
type <- "open"
eval(parse(text=paste(regex.scrape[2], collapse=" ")))
regex.scrape[4:13]
eval(parse(text=paste(regex.scrape[4:8], collapse=" ")))
eval(parse(text=paste(regex.scrape[4:8], collapse=";")))
STR
regex.scrape[51:60]
regex.scrape[61:70]
eval(parse(text=paste(regex.scrape[67:69], collapse=";")))
pgn
eval(parse(text=paste(regex.scrape[68], collapse=";")))
eval(parse(text=paste(regex.scrape[69], collapse=";")))
pgn
regex.scrape[61:80]
eval(parse(text=paste(regex.scrape[71:72], collapse=";")))
pgn
eval(parse(text=paste(regex.scrape[75], collapse=";")))
info
eval(parse(text=paste(regex.scrape[76], collapse=";")))
info
eval(parse(text=paste(regex.scrape[77], collapse=";")))
info
eval(parse(text=paste(regex.scrape[78], collapse=";")))
info
eval(parse(text=paste(regex.scrape[80], collapse=";")))
regex.scrape[70:90]
regex.scrape[71:90]
eval(parse(text=paste(regex.scrape[80:81], collapse=";")))
eval(parse(text=paste(regex.scrape[80:81], collapse="")))
openDF
eval(parse(text=paste(regex.scrape[82], collapse="")))
openDF
gsub(";","",openDF)
class(gsub(";","",openDF))
args(gsub)
args(apply)
apply(openDF,2,gsub, pattern=";", replacement="")
regex.scrape[95] <- return(apply(openDF,2,gsub, pattern=";", replacement=""))
regex.scrape[95] <- "return(apply(openDF,2,gsub, pattern=";", replacement=""))"
regex.scrape[95] <- 'return(apply(openDF,2,gsub, pattern=";", replacement=""))'
tail(regex.scrape)
regex.scrape[85] <- 'return(apply(openDF,2,gsub, pattern=";", replacement=""))'
regex.scrape <- regex.scrape[1:90]
tail(regex.scrape)
regex.scrape
regex.scrape <- regex.scrape[1:87]
writeLines(regex.scrape, "R/regex.scrape.R")
file.edit("R/regex.scrape.R")
source("R/regex.scrape.R")
Link
args(regex.scrape)
regex.scrape(Link,"open")
ls()
DF1
DF1 <- regex.scrape(Link,"open")
DF1
dim(DF1)
class(DF1)
file.edit("regex.scrape.R")
file.edit("R/regex.scrape.R")
source("R/regex.scrape.R")
DF1 <- regex.scrape(Link,"open")
DF1
dim(DF1)
openDF
class(openDF)
tail(regex.scrape)
class(apply(openDF, 2, gsub, pattern=";", replacement=""))
matrix(apply(openDF, 2, gsub, pattern=";", replacement=""), ncol=ncol(openDF))
file.edit("regex.scrape.R")
file.edit("R/regex.scrape.R")
DF1 <- regex.scrape(Link,"open")
DF1
source("R/regex.scrape.R")
DF1 <- regex.scrape(Link,"open")
file.edit("R/regex.scrape.R")
source("R/regex.scrape.R")
DF1 <- regex.scrape(Link,"open")
DF1
ls()
regex.scrape <- readLines("R/regex.scrape.R")
info
regex.scrape[70:87]
eval(parse(text=paste(regex.scrape[76:78], collapse=";")))
info
eval(parse(text=paste(regex.scrape[81:84], collapse=";")))
openDF
DF1
ls()
rm(arguments,DF,DF1,DF2,DF3,Html,info,Link,n,openDF,pgn,pgnPattern,regex.scrape,scrape.chess.com,scrapeLoop,STR,test,type,weave.rbind)
ls()
list.files()
scrapeLoop <- scrapeLoop.R
scrapeLoop <- readLines("scrapeLoop.R")
scrapeLoop
arguments <- 1:20
eval(parse(text=paste(scrapeLoop[c(3)], collapse=";")))
eval(parse(text=paste(scrapeLoop[c(10)], collapse=";")))
DF
eval(parse(text=paste(scrapeLoop[c(12:14)], collapse=";")))
n
q()
